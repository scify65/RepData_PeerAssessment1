names(opafy04)<-toupper(names(opafy04))
opafy04<-opafy04[varlist]
opafy04$YEAR<-2004
names(opafy05)<-toupper(names(opafy05))
opafy05<-opafy05[varlist]
opafy05$YEAR<-2005
trim<-rbind(opafy00,opafy01,opafy02,opafy03,opafy04,opafy05,opafy06)
trim<-trim%>%filter(SOURCES==1)%>%mutate(GDLINR=substr(GDLINEHI,1,2))
trim<-trim[complete.cases(trim),]
names(trim)
#Cap the XFOLSOR values at 43
cap<-trim$XFOLSOR>43
trim$XFOLSOR[cap]<-43
#Convert NEWRACE to a factor
trim$NEWRACE<-factor(trim$NEWRACE,levels=c(1,2,3,6),
labels=c("White","Black","Hispanic","Other"))
#Build the GDLINEHI plot
gdlines<-ggplot(trim, aes(XFOLSOR,XCRHISSR,color=GDLINEHI))+geom_point(alpha=1/3)+
facet_wrap(~GDLINR,nrow=4,ncol=6)+labs(x="Final Offense Level")+
labs(y="Criminal History Category")+
labs(title="Sentencing Table by Chapter 2 Guideline")
print(gdlines)
#Build the RACES plot
races<-ggplot(trim, aes(XFOLSOR,XCRHISSR,color=NEWRACE))+geom_point(alpha=1/3)+
facet_wrap(~GDLINR,nrow=4,ncol=6)+labs(x="Final Offense Level")+
labs(y="Criminal History Category")+
labs(title="Sentencing Table by Chapter 2 Guideline and Race")
print(races)
#Build the fraud plot
fraud<-filter(trim,GDLINEHI=="2B1.1")
frplot<-ggplot(fraud, aes(SENSPLT0,XFOLSOR,color=NEWRACE))+geom_point(alpha=1/3)+
facet_wrap(~year,ncol=3)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
names(frplot)
names(fraud)
frplot<-ggplot(fraud, aes(SENSPLT0,XFOLSOR,color=NEWRACE))+geom_point(alpha=1/3)+
facet_wrap(.~YEAR,ncol=4,nrow=2)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
frplot<-ggplot(fraud, aes(SENSPLT0,XFOLSOR,color=NEWRACE))+geom_point(alpha=1/3)+
facet_wrap(~YEAR,ncol=4)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
frplot<-ggplot(fraud, aes(XFOLSOR,SENSPLT0,color=NEWRACE))+geom_point()+
facet_wrap(~YEAR,ncol=4)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
ggsave(file="./USSC/fraud.png")
?geom_smooth
frplot<-ggplot(fraud, aes(XFOLSOR,SENSPLT0,color=NEWRACE))+geom_point()+
facet_wrap(~YEAR,ncol=4)+geom_smooth(lm)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
frplot<-ggplot(fraud, aes(XFOLSOR,SENSPLT0,color=NEWRACE))+geom_point()+
facet_wrap(~YEAR,ncol=4)+geom_smooth(method=lm)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
frplot<-ggplot(fraud, aes(XFOLSOR,SENSPLT0,color=NEWRACE))+geom_point(shape=1)+
facet_wrap(~YEAR,ncol=4)+geom_smooth(method=lm)+
labs(x="Final Offense Level")+labs(y="Sentence in Months")+
labs(title="Sentence by Race and Final Offense Level for Fraud Offenders")
print(frplot)
ggsave(file="./USSC/fraud2.png")
plot(q)
source('~/dice.R')
rolls<-c(2,4,4,5,rep(6,6),rep(7,8),rep(8,9),rep(9,5),rep(10,4),11,11,11,12)
hist(rolls,breaks=12)
rolls2<-c(2,3,3,4,4,4,rep(5,4),rep(6,5),rep(7,6),rep(8,5),rep(9,4),rep(10,3),11,11,12)
hist(rolls2,breaks=12)
rolls
print(q+scale_x_continuous(breaks=11))
print(q+scale_x_continuous(breaks=2:12))
q<-ggplot(oldrolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)
print(q)
print(q+stat_function(fun=sin))
print(q+stat_smooth())
print(q+stat_smooth(se=false))
print(q+stat_smooth(se=FALSE))
source('~/dice.R')
ggsave(rolls3,"ThreadRolls.png",dpi=100)
source('~/dice.R')
class(rolls3)
class(rolls4)
rolls4<-ggplot(exprolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)+
labs(title="Expected Rolls")+stat_smooth(se=FALSE)
print(rolls4)
ggsave(rolls4,"ExpectedRolls.png",dpi=100)
rolls3<-ggplot(oldrolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)+
labs(title="Rolls in the Thread")+stat_smooth(se=FALSE)
#print(rolls3)
ggsave(rolls3,"ThreadRolls.png",dpi=100)
rolls3<-ggplot(oldrolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)+
labs(title="Rolls in the Thread")+stat_smooth(se=FALSE)
#print(rolls3)
ggsave(rolls3,"ThreadRolls.png")
rolls3<-ggplot(oldrolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)+
labs(title="Rolls in the Thread")+stat_smooth(se=FALSE)
#print(rolls3)
ggsave(rolls3,file="ThreadRolls.png")
rolls3<-ggplot(oldrolls,aes(Roll,Freq))+geom_bar(stat="identity")+
scale_x_continuous(breaks=2:12)+scale_y_continuous(breaks=0:10)+
labs(title="Rolls in the Thread")+stat_smooth(se=FALSE)
#print(rolls3)
ggsave(rolls3,file="ThreadRolls.png",dpi=100)
source('~/dice.R')
source('~/Reproducible Research/Peer1.R')
source('~/Reproducible Research/Peer1.R')
source('~/Reproducible Research/Peer1.R')
setwd("Reproducible Research")
getwd()
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,destfile="data.zip")
unzip("data.zip", exdir=".")
data<-read.csv("activity.csv",colClasses=c("numeric","character","numeric"))
str(data)
data$date<-as.Date(data$date, "%m/%d/%Y")
str(data)
#Read it in
data<-read.csv("activity.csv",colClasses=c("numeric","character","numeric"))
#Convert date to a Date variable
data$date<-as.Date(data$date, "%m-%d-%Y")
str(data)
?as.date
?as.Date
#Read it in
data<-read.csv("activity.csv",colClasses=c("numeric","character","numeric"))
#Convert date to a Date variable
data$date<-as.Date(data$date, format="%m-%d-%Y")
str(data)
data<-read.csv("activity.csv",colClasses=c("numeric","character","numeric"))
str(data)
data$date<-as.Date(data$date, "%Y-%m-%d")
str(data)
steps<-data%>%group_by(date)%>%summarize(total_steps=n(steps,na.rm=TRUE))
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+labs(main="Total Steps per Day")
print(steps.plot)
steps<-data%>%group_by(date)%>%summarize(total_steps=n())
head(steps)
steps<-data%>%group_by(date)%>%summarize_each(total_steps=n())
steps<-data%>%group_by(date)%>%summarise_each(total_steps=n())
steps<-data%>%group_by(date)
steps
head(data)
?read.csv
table(data,steps)
table(data$steps)
steps<-data%>%group_by(date)%>%summarise_each(total_steps=n())
steps<-data%>%group_by(date)%>%summarise(total_steps=n())
steps
table(steps$total_steps)
?sum
steps<-data%>%group_by(date)%>%summarise(total_steps=sum())
steps
table(steps$total_steps)
steps<-data%>%group_by(date)%>%summarise(total_steps=sum(steps))
steps
steps<-data%>%group_by(date)%>%summarise(total_steps=sum(steps,na.rm=TRUE))
steps
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+labs(main="Total Steps per Day")
print(steps.plot)
table(steps$total_steps)
?binwidth
??binwidth
print(steps.plot+scale_y_continuous(breaks=5))
print(steps.plot+scale_y_continuous(breaks=2))
print(steps.plot+scale_y_continuous(breaks=range(0:10,2)))
?range
print(steps.plot+scale_y_continuous(breaks=range(0,10,2)))
print(steps.plot+scale_y_continuous(breaks=seq(0,10,2)))
head(summarize(steps,mean=mean(total_steps),sd=sd(total_steps)))
activity<-data%>%group_by(interval)%>%summarize(average_steps=mean(steps,na.rm=TRUE))
activity
table(data$interval)
activ.plot<-ggplot(activity,aes(interval,mean))+geom_line()
print(activ.plot)
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()
print(activ.plot)
max(activity$average_steps)
activity[max(activity$average_steps),]
1705/206
206*5
high<-filter(activity,average_steps==max(average_steps))
high
head(high)
filter(activity,average_steps==max(average_steps))
?complete.cases
print(!complete.cases(data))
sum(!complete.cases(data))
missing<-data[ok,]
ok<-complete.cases(data)
missing<-data[ok,]
missing<-data[!ok,]
table(data)
table(data$steps)
table(data$interval)
activity[,2]
activity[,1]
table(missing$steps)
str(miss)
str(missing)
if(missing$interval==activity$internal){
missing$steps==activity$average_steps
}
missing$interval==activity$internal
str(activity)
missing$interval
activity$interval
for(x in activity$interval){
if(missing$interval==x){
print(x)
}
}
warnings()
?ddply
?replace
mutate(missing, steps = replace(activity1$steps, is.na(activity1$steps), activity1$intmeans)
)
missing<-data
mutate(missing, steps = replace(missing$steps, is.na(missing$steps), activity$average_steps))
missing<-mutate(missing, steps = replace(missing$steps, is.na(missing$steps), activity$average_steps))
?table
table(data$steps,useNA="ifany")
table(missing$steps,useNA="ifany")
remove(missing)
missing<-mutate(data, steps = replace(data$steps, is.na(data$steps),
activity$average_steps))
table(missing$steps,useNA="ifany")
table(data$steps,useNA="ifany")
miss<-missing%>%group_by(date)%>%summarise(total_steps=sum())
miss.plot<-ggplot(miss,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(miss.plot)
str(missing)
str(miss)
table(miss$total_steps)
miss<-missing%>%group_by(date)%>%summarise(total_steps=sum(steps))
miss.plot<-ggplot(miss,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(miss.plot)
head(summarize(miss,mean=mean(total_steps),sd=sd(total_steps)))
?weekdays
data$day<-weekdays(data$date)
str(data)
test<-factor(data$day,labels=c(rep("Weekday",5),"Weekend","Weekend"))
table(data$day)
data$weekday<-weekday(data$date) %in% c(0,6)
data$weekday<-weekdays(data$date) %in% c(0,6)
str(data)
data$weekend<-factor(weekdays(data$date) %in% c(0,6),levels="Weekday","Weekend")
str(data)
data$weekend<-factor(weekdays(data$date) %in% c(0,6),levels=c("Weekday","Weekend"))
str(data)
table(data$weekend)
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend,levels="Weekday","Weekend")
str(data)
data$weekend<-weekdays(data$date) %in% c(0,6)
str(data)
?factor
data$weekend<-factor(data$weekend,levels="Weekday","Weekend")
?factor
str(data)
data$weekend<-factor(data$weekend,levels=c("Weekday","Weekend"))
str(data)
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend,levels=c("Weekday","Weekend"))
str(data)
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend,lables=c("Weekday","Weekend"))
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend,levels=c("False","True"),lables=c("Weekday","Weekend"))
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend,levels=c("False","True"))
str(data)
data$weekend<-weekdays(data$date) %in% c(0,6)
data$weekend<-factor(data$weekend)
str(data)
table(data$weekend)
weekend<-c("Saturday","Sunday")
data$weekend<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
str(data)
activity$weekend<-factor((weekdays(activity$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekend)
str(activity)
data$weekend<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekend,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekend)
weekend<-c("Saturday","Sunday")
data$weekend<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekend,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekend)
weekend<-c("Saturday","Sunday")
data$weekend<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekend,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
str(day)
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekend)
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")
day.plot+facet_grid(weekend)
data$weekday<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekday,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekday)
data$weekday<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekday,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(data$weekday)
data$weekday<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekday,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(~weekday)
print(day.plot)
data$weekday<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekday,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekday~)
data$weekday<-factor((weekdays(data$date) %in% weekend),levels=c("FALSE","TRUE"),
labels=c("Weekday","Weekend"))
day<-data%>%group_by(weekday,interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
day.plot<-ggplot(day,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+facet_grid(weekday~.)
print(day.plot)
day
setwd("H:/My Documents/RepData_PeerAssessment1")
data$date<-as.Date(data$date, "%Y-%m-%d")
#What is the mean of the total number of steps taken per day?
steps<-data%>%group_by(date)%>%summarise(total_steps=sum(steps))
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(steps.plot)
#Average of the total
head(summarize(steps,mean=mean(total_steps),sd=sd(total_steps)))
data<-read.csv("activity.csv",colClasses=c("numeric","character","numeric"))
#Convert date to a Date variable
data$date<-as.Date(data$date, "%Y-%m-%d")
#What is the mean of the total number of steps taken per day?
steps<-data%>%group_by(date)%>%summarise(total_steps=sum(steps))
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(steps.plot)
#Average of the total
head(summarize(steps,mean=mean(total_steps),sd=sd(total_steps)))
data<-read.csv(unz("activity.zip","activity.csv"),colClasses=c("numeric","character","numeric"))
data$date<-as.Date(data$date, "%Y-%m-%d")
#What is the mean of the total number of steps taken per day?
steps<-data%>%group_by(date)%>%summarise(total_steps=sum(steps))
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(steps.plot)
#Average of the total
head(summarize(steps,mean=mean(total_steps),sd=sd(total_steps)))
steps<-data%>%na.omit()%>%group_by(date)%>%summarise(total_steps=sum(steps))
steps.plot<-ggplot(steps,aes(total_steps))+geom_histogram()+
labs(main="Total Steps per Day")+scale_y_continuous(breaks=seq(0,10,2))+
xlab("Daily Step Totals")+ylab("Count")
print(steps.plot)
#Average of the total
head(summarize(steps,mean=mean(total_steps),median=median(total_steps)))
summarize(steps,mean=mean(total_steps),median=median(total_steps))
table(activity$interval)
activity<-data%>%group_by(interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")
table(activity$interval)
test<-as.POSIXlt(activity$interval)
print(activ.plot)
?as.Time
?strptime
test<-as.POSIXlt(activity$interval,"%H%M")
table(data$date)
test<-as.POSIXlt(activity$interval,"%k",origin="2012-10-01")
test<-as.POSIXlt(activity$interval,format="%k",origin="2012-10-01")
test
test<-as.POSIXlt(activity$interval,format="%H%M",origin="2012-10-01")
test
time<-data$interval
time
time<-activity$interval
time
data<-read.csv(unz("activity.zip","activity.csv"),colClasses=c("character","character","numeric"))
time<-as.character(time)
time
?strptime
strptime(time,format="%H%M")
time
table(data$interval)
?sprintf
test<-sprintf("%04d",time)
test<-sprintf("%04s",time)
test
test<-formatC(time,width=4,flag=0)
?formatC
remove(test)
test<-formatC(time,width=4,flag=0)
test
time2<-as.numeric(activity$interval)
formatC(time2,width=4,flag=0)
test<-formatC(time2,width=4,flag=0)
strptime(test,format="%H%M")
strptime(test,format="%H%M",origin="2012-10-01")
strftime(test,format="%H%M")
?strftime
activity<-data%>%group_by(interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
activity$interval<-strptime(formatC(activity$interval,width=4,flag=0),
format="%H%M")
table(activity$internal)
table(activity$interval)
activity$interval
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")
print(activ.plot)
ggplot(activity,aes(interval,average_steps))+geom_line()
str(activity)
activity<-data%>%group_by(interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
activity$interval<-as.POSIXct(strptime(formatC(activity$interval,width=4,flag=0),
format="%H%M"))
warnings()
table(activity$internal)
table(activity$interval)
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")
print(activ.plot)
str(activity)
activity
table(activity$average_steps)
activity<-data%>%group_by(interval)%>%
summarize(average_steps=mean(steps,na.rm=TRUE))
table(activity$average_steps)
data
table(data$steps)
?table
table(data$steps,useNA="ifany")
activity<-data%>%group_by(interval)%>%summarize(average_steps=mean(steps,na.rm=TRUE))
warnings()
?mean
data<-read.csv(unz("activity.zip","activity.csv"),colClasses=c("numeric","character","numeric"))
#Convert date to a Date variable
data$date<-as.Date(data$date, "%Y-%m-%d")
activity<-data%>%group_by(interval)%>%summarize(average_steps=mean(steps,na.rm=TRUE))
activity$interval<-as.POSIXct(strptime(formatC(activity$interval,width=4,flag=0),
format="%H%M"))
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")
print(activ.plot)
?scale_x_datetime
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+scale_x_datetime("",format="%H:%M")
activ.plot<-ggplot(activity,aes(interval,average_steps))+geom_line()+
labs(main="Average Steps per Time Interval")+xlab("Interval")+
ylab("Step Average")+scale_x_datetime("",labels=date_format("%H:%M"))
install.package(scales)
install.packages(scales)
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
